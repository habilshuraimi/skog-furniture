<%- include('../layout/header') %>

<style>
  body {
    background-color: rgba(67, 159, 159, 0.315);
  }

  

</style>
<!-- search start -->
<div class="search-content-wrap main-search-active">
  <!-- (Omitted for brevity) -->
</div>

<!-- mini cart start -->
<div class="sidebar-cart-active">
  <div class="sidebar-cart-all">
    <a class="cart-close" href="#"><i class="dlicon ui-1_simple-remove"></i></a>
    <div class="cart-content">
      <h3>Shopping Cart</h3>
      <ul>
        <% if (cartData && cartData.items && cartData.items.length > 0) { %> <%
        for (let i = 0; i < cartData.items.length; i++) { %>
        <li class="single-product-cart">
          <div class="cart-img">
            <a href="#"
              ><img
                src="/productImages/<%= cartData.items[i].productId.images[1] %>"
                alt=""
            /></a>
          </div>
          <div class="cart-title">
            <h4><a href="#"><%= cartData.items[i].productId.name %></a></h4>
            <span><%= cartData.items[i].price %></span>
          </div>
          <div class="cart-delete">
            <a href="#">×</a>
          </div>
        </li>
        <% } %> <% } %>
      </ul>
      <div class="cart-total"></div>
      <div class="cart-checkout-btn">
        <a class="btn-hover cart-btn-style" href="/cart">view cart</a>
        <a class="no-mrg btn-hover cart-btn-style" href="/checkout">checkout</a>
      </div>
    </div>
  </div>
</div>

<!-- aside start -->
<div class="header-aside-active">
  <!-- (Omitted for brevity) -->
</div>

<div class="breadcrumb-area">
  <div class="container-fluid">
    <div class="breadcrumb-content text-center">
      <div class="breadcrumb-title">
        <h2>Checkout</h2>
      </div>
      <ul>
        <li><a href="index.html">Home </a></li>
        <li><span> &gt; </span></li>
        <li class="active">Checkout</li>
      </ul>
    </div>
  </div>
</div>

<!-- checkout start -->
<div class="checkout-main-area pt-100 pb-100">
  <div class="container">
    <div class="customer-zone mb-30">
      <p class="cart-page-title">
        Have a coupon?
        <a class="checkout-click" href="#">Click here to enter your code</a>
      </p>
      <div class="checkout-login-info">
        <p>If you have a coupon code, please apply it below.</p>
        <!-- <form> -->
          <input
            style="background-color: #ffff"
            type="text"
            name="couponCode"
            placeholder="Coupon code"
            id="couponCode"
          />

          <input type="submit" value="Apply Coupon" onclick="applyCoupon();" />
        <!-- </form> -->
      </div>
    </div>
    <div class="checkout-wrap">
      <div class="row">
        <div class="col-lg-7">
          <div class="billing-info-wrap mr-100">
            <div class="row">
              <div class="col-12 col-md-8 offset-md-2">
                <div class="card mt-4">
                  <div class="card-header text-white">
                    <h4>Select Delivery Address</h4>
                  </div>
                  <div class="card-body">
                    <div class="address-list">
                      <% if (addresses && addresses.length > 0) { %> <%
                      addresses.forEach((address, index) => { %>
                      <div class="address-item mb-3 p-3 border rounded">
                        <div class="form-check">
                          <input
                            class="form-check-input"
                            type="radio"
                            id="address<%= index %>"
                            name="address"
                            value="<%= address.addressType %>"
                          />
                          <label
                            class="form-check-label"
                            for="address<%= index %>"
                          >
                            <strong><%= address.name %></strong><br />
                            <%= address.type %> <%= address.houseNo %>, <%=
                            address.street %><br />
                            <%= address.landmark %><br />
                            <%= address.city %>, <%= address.state %> - <%=
                            address.pincode %><br />
                            Phone: <%= address.mobile %>
                          </label>
                        </div>
                      </div>
                      <% }); %> <% } else { %>
                      <p>No saved addresses. Please add a new address.</p>
                      <% } %>
                    </div>
                    <button id="addNewAddress" class="btn btn-success mt-3">
                      Add New Address
                    </button>
                  </div>
                </div>
              </div>
            </div>

            <style>
              .address-item:hover {
                background-color: #f8f9fa;
              }
            </style>
          </div>
        </div>
        <div class="col-lg-5">
          <div class="your-order-area" style="background-color: #ffff">
            <h3>Your order</h3>
            <div class="your-order-wrap gray-bg-4">
              <div class="your-order-info-wrap">
                <div class="your-order-info">
                  <ul>
                    <li>Product <span>Total</span></li>
                  </ul>
                </div>
                <div class="your-order-middle">
                  <ul>
                    <% let subtotal = 0; %>
                    <% cartData.items.forEach(item => { %>
                      <% let itemTotal = item.price %>
                      <% subtotal += itemTotal; %>
                      <li>
                        <%= item.productId.name %> (Qty: <%= item.quantity %>)
                        <span>₹<%= itemTotal.toFixed(2) %></span>
                      </li>
                    <% }); %>
                  </ul>
                </div>
                <div class="your-order-info order-subtotal">
                  <ul>
                    <li>Subtotal <span id="orderSubtotal">₹<%= subtotal.toFixed(2) %></span></li>
                  </ul>
                </div>
                <div class="your-order-info order-shipping">
                  <ul>
                    <li>Shipping <span>₹ 0.00</span></li>
                  </ul>
                </div>
                <% const discount = (discountPercent / 100) * subtotal; %>
                <% if (discount > 0) { %>
                  <div class="your-order-info order-discount">
                    <ul>
                      <li>Discount <span id="orderDiscount">-₹<%= discount.toFixed(2) %></span></li>
                    </ul>
                  </div>
                <% } else { %>
                  <div class="your-order-info order-discount">
                    <ul>
                      <li>Discount <span id="orderDiscount">-₹0.00</span></li>
                    </ul>
                  </div>
                <% } %>
                <div class="your-order-info order-total">
                  <ul>
                    <li>
                      Total
                      <span id="orderTotal">₹<%= (subtotal - discount).toFixed(2) %></span>
                    </li>
                    <input
                      type="hidden"
                      value="<%= (subtotal - discount).toFixed(2) %>"
                      name="amount"
                      id="orderTotalInput"
                    />
                  </ul>
                </div>
              </div>
          
              <div style="margin-top: 20px">
                <label for="payOnDelivery" style="font-family: Arial, sans-serif; font-size: 16px">
                  <input type="radio" id="payOnDelivery" name="paymentOption" value="COD" style="margin-right: 10px" />
                  Pay on Delivery
                </label>
                <label for="razorpayPayment" style="font-family: Arial, sans-serif; font-size: 16px">
                  <input type="radio" id="razorpayPayment" name="paymentOption" value="Razorpay" style="margin-right: 10px" />
                  Pay Online
                </label>
              </div>
              <br />
              <button id="proceedButton" class="btn btn-primary">Proceed</button>
            </div>
          </div>
          
          
          
          </div>
          
          
      </div>
    </div>
  </div>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const orderTotal = parseFloat(document.getElementById("orderTotal").value);
    const payOnDelivery = document.getElementById("payOnDelivery");

    if (orderTotal < 1000) {
      payOnDelivery.disabled = false;
    } else {
      payOnDelivery.disabled = true;
    }
  });

  document
    .getElementById("proceedButton")
    .addEventListener("click", async (e) => {
      // e.preventDefault(); // Prevent form from submitting traditionally

      const selectedAddressType = document.querySelector(
        'input[name="address"]:checked'
      );
      const selectedPaymentOption = document.querySelector(
        'input[name="paymentOption"]:checked'
      );
      const bill = document.querySelector('input[name="amount"]').value;

      if (!selectedAddressType || !selectedPaymentOption) {
        Swal.fire({
          title: "Attention!",
          text: "Please select both an address and a payment option.",
          icon: "warning",
          confirmButtonText: "OK",
        });
        return;
      }

      const addressType = selectedAddressType.value;
      const paymentOption = selectedPaymentOption.value;
      const amount = parseFloat(bill);
      console.log(paymentOption);
      const data = { addressType, paymentOption, amount };

      try {
        if (paymentOption === "COD") {
          const response = await fetch("/order", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
          });

          if (response.ok) {
            const responseData = await response.json();
            Swal.fire({
              title: "Success!",
              text: "Order placed successfully.",
              icon: "success",
              confirmButtonText: "OK",
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = `/confirmOrder?id=${responseData.order_id}`;
              }
            });
          } else {
            throw new Error("The server responded with an error status.");
          }
        } else if (paymentOption === "Razorpay") {
          const orderResponse = await fetch("/createOrder", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ amount }),
          });

          if (orderResponse.ok) {
            const orderData = await orderResponse.json();
            const options = {
              key: "<%= process.env.RAZORPAY_ID %>",
              amount: orderData.amount,
              currency: "INR",
              name: "Your Company",
              description: "Test Transaction",
              image: "https://example.com/your_logo",
              order_id: orderData.id,
              handler: async function (response) {
                const verifyResponse = await fetch("/verifyPayment", {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({
                    order_id: orderData.id,
                    payment_id: response.razorpay_payment_id,
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_signature: response.razorpay_signature,
                    addressType,
                  }),
                });

                if (verifyResponse.ok) {
                  const responseData = await verifyResponse.json();
                  Swal.fire({
                    title: "Success!",
                    text: "Payment verified successfully.",
                    icon: "success",
                    confirmButtonText: "OK",
                  }).then(async (result) => {
                    if (result.isConfirmed) {
                      const orderResponse = await fetch("/order", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(data),
                      });
                      if (orderResponse.ok) {
                        const responseData = await orderResponse.json();
                        Swal.fire({
                          title: "Success!",
                          text: "Order placed successfully.",
                          icon: "success",
                          confirmButtonText: "OK",
                        }).then((result) => {
                          if (result.isConfirmed) {
                            window.location.href = `/confirmOrder?id=${responseData.order_id}`;
                          }
                        });
                      } else {
                        throw new Error(
                          "The server responded with an error status."
                        );
                      }
                    }
                  });
                } else {
                  throw new Error("Payment verification failed.");
                }
              },
              prefill: {
                name: "Your Name",
                email: "customer@example.com",
                contact: "9999999999",
              },
              notes: {
                address: "Razorpay Corporate Office",
              },
              theme: {
                color: "#3399cc",
              },
            };

            const rzp1 = new Razorpay(options);
            rzp1.open();
          } else {
            throw new Error("Failed to create Razorpay order.");
          }
        }
      } catch (error) {
        Swal.fire({
          title: "Error!",
          text: error.message,
          icon: "error",
          confirmButtonText: "OK",
        });
      }
    });

  document
    .getElementById("addNewAddress")
    .addEventListener("click", function () {
      window.location.href = "/addAddress";
    });

    async function applyCoupon() {
  try {
    let couponCode = document.getElementById("couponCode").value;

    let response = await fetch("/applycoupon", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ couponCode }),
    });

    let data = await response.json();

    if (response.status === 200) {
      Swal.fire({
        icon: "success",
        title: "Coupon Applied",
        text: `Discount Amount: ₹${data.discountAmount.toFixed(2)}, New Bill Total: ₹${data.newBillTotal.toFixed(2)}`,
      }).then(() => {
        // Update the discount and total amount in the frontend
        document.getElementById("orderDiscount").textContent = `-₹${data.discountAmount.toFixed(2)}`;
        document.getElementById("orderTotal").textContent = `₹${data.newBillTotal.toFixed(2)}`;
        document.getElementById("orderTotalInput").value = data.newBillTotal.toFixed(2);
      });
    } else if (response.status === 400) {
      Swal.fire({
        icon: "error",
        title: "Coupon Error",
        text: data.message,
      });
    } else if (data.status === "invalid") {
      Swal.fire({
        icon: "error",
        title: "Invalid Coupon",
        text: "The coupon code you entered is not valid.",
      });
    } else if (data.status === "Limit") {
      Swal.fire({
        icon: "error",
        title: "Coupon Limit",
        text: "The coupon cannot be applied to your cart due to limit restrictions.",
      });
    } else {
      Swal.fire({
        icon: "error",
        title: "Error",
        text: "An unexpected error occurred. Please try again later.",
      });
    }
  } catch (err) {
    Swal.fire({
      icon: "error",
      title: "Error",
      text: "An error occurred while applying the coupon.",
    });
  }
}


  async function removeCoupon(coupon) {
    try {
      let res = await fetch("/removeCoupon", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ coupon }),
      });
      let responseData = await res.json();
      if (res.status == 200) {
        Swal.fire({
          title: "Success",
          text: responseData.message,
          icon: "success",
          confirmButtonText: "OK",
        });
        // .then(() => {
        //     window.location.reload();
        // });
      } else {
        Swal.fire({
          title: "Error",
          text: responseData.message,
          icon: "error",
          confirmButtonText: "OK",
        });
      }
    } catch (error) {
      console.error("Error removing coupon:", error);
      Swal.fire({
        title: "Error",
        text: error.message,
        icon: "error",
        confirmButtonText: "OK",
      });
    }
  }
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const subtotal = parseFloat("<%= subtotal.toFixed(2) %>");
    const payOnDelivery = document.getElementById("payOnDelivery");

    if (subtotal > 1000) {
      payOnDelivery.disabled = true;
    } else {
      payOnDelivery.disabled = false;
    }
  });
</script>

<%- include('../layout/footer') %>
